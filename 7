{
"cells":[
{"cell_type":"markdown",
"metadata":{"collapsed":true,"id":"DCAC55358FA94FF7B029AD880B46CA7A","mdEditEnable":false},
"source":["# 教案"],
"execution_count":null},
{"cell_type":"markdown","metadata":{"id":"8ACF708841594B65B4EDFA02BAB80D39"},"source":["## DEMO 1"],"outputs":[],"execution_count":null},
{"cell_type":"markdown","metadata":{"id":"166DD94E263242369C20B34638F19952"},"source":["# 1. Traceback"],"outputs":[],"execution_count":null},
{"cell_type":"code","execution_count":null,"metadata":{"id":"7E9DE3E1E2B146998B2DAAAD5E5D4D9F"},"outputs":[],"source":["int('a')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F301387677374CA583A7AF5D5095FF29"},"outputs":[],"source":["def to_int(s):\n","    return int(s)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"45F2F171B5C44A4582156480B6DAEB11"},"outputs":[],"source":["to_int('a')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ED6B85DEAF5642589DDD03D4088F3700"},"outputs":[],"source":["def call_to_int(s):\n","    return to_int(s)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FF0F32566C8842B182F8B166BF4002AA"},"outputs":[],"source":["call_to_int('a')"]},{"cell_type":"markdown","metadata":{"id":"1E208D1F39244794A41759C22E9265F0"},"source":["---\n","## DEMO 2"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"59227723B6EC4FE486132B1096E2A215"},"source":["# 2. Raise"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"3C409DB5C98E4A2A8AA8CAB74539E36C"},"source":["## 定义函数"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"59609C8B5AE24560823CC40E6845B24B"},"outputs":[],"source":["# 用于获取用户信息的函数，调用其他函数来获取用户输入\n","\n","def get_information():\n","    # （省略：获取其他信息）\n","    age = get_age()\n","    return [age]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BFA8B855D8BD42A2A1D6E3EA336B1412"},"outputs":[],"source":["# 用来获取用户输入（年龄）的函数\n","\n","def get_age():\n","    age = int(user_input)\n","    return age"]},{"cell_type":"markdown","metadata":{"id":"536C4A9C67F6429E85D00576D38E3FF9"},"source":["## 模拟程序运行"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"B467A3A460224C16B2978E35A047069E"},"outputs":[],"source":["# 模拟用户输入\n","\n","user_input = '-1'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"347FC76397B545C2BCA740C899B41DB4"},"outputs":[],"source":["# 程序开始运行\n","\n","get_information()"]},{"cell_type":"markdown","metadata":{"id":"18AC49D3CA2B4B89BE2F141E06644C84"},"source":["## 抛出异常"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"48D5CDBC193749098FA4B3330F1A10A7"},"outputs":[],"source":["# 用来获取用户输入（年龄）的函数\n","\n","def get_age():\n","    age = int(user_input)\n","    \n","    if age < 0: raise Exception()\n","    return age"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"80F346F576E848A7BAAC090C9D0097CA"},"outputs":[],"source":["# 程序开始运行\n","\n","get_information()"]},{"cell_type":"markdown","metadata":{"id":"D6364A5F9D394D7394C89EF6CCC200E5"},"source":["## 抛出带有信息的异常"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"DCFDAD03CF7D48208FC46FF13AE33A4A"},"outputs":[],"source":["# 用来获取用户输入（年龄）的函数\n","\n","def get_age():\n","    age = int(user_input)\n","    \n","    if age < 0: raise Exception(404)\n","    return age"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"5AF973D7662344CC8AA94D5BE0B46C57"},"outputs":[],"source":["# 程序开始运行\n","\n","get_information()"]},{"cell_type":"markdown","metadata":{"id":"AD84663DE03042118AB18D9D6D8A8DE7"},"source":["# 3. 处理异常"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"D14AB33B16634DBA8377C7BD94432261"},"source":["## try-except"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"56417314515A4B67875A0C508DE1C7CF"},"outputs":[],"source":["def get_information():\n","    try:\n","        age = get_age()\n","    except:\n","        print('错误')"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"88A2920ADD2942C08547B6DBA789D076"},"outputs":[],"source":["# 程序开始运行\n","\n","get_information()"]},{"cell_type":"markdown","metadata":{"id":"C9BAC64F197C4D1C8E7B86D20881EB27"},"source":["## except as e:"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"8BF6F7AF5F2F42B79665AB63508493C9"},"outputs":[],"source":["def get_information():\n","    try:\n","        age = get_age()\n","    except Exception as e:\n","        if int(str(e)) == 404:\n","            print('Error Code: 404')"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"9FEE50B0030B454D83FC2E427DD21C98"},"outputs":[],"source":["# 程序开始运行\n","\n","get_information()"]},{"cell_type":"markdown","metadata":{"id":"419D8D621F544FAD931572A3C1FEA986"},"source":["# 4. 标准库抛出的异常"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"AE7777B35BA94BFF8A74CDDC68A26BB1"},"source":["## 观察错误类型"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"E24A3F020D9D417EA3FAFB208F3256FC"},"outputs":[],"source":["n = int('a')"]},{"cell_type":"markdown","metadata":{"id":"EED74BDD95EB4FA98A34039F7CB2EA37"},"source":["## 处理所有类型错误"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"7E240064854F4BE2884EF734E39D592A"},"outputs":[],"source":["try:\n","    n = int('a')\n","except:\n","    print('a is not convertable')"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"63406DEE622B4D2C88B983C431DC4B72"},"outputs":[],"source":["try:\n","    n = int('a')\n","except Exception as e:\n","    print(e)"]},{"cell_type":"markdown","metadata":{"id":"C9CAC9DD57664F45BF9C9618E5D8727F"},"source":["## 只处理 ValueError"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"6E331BC74EEE47CB8F7F0B89CE6FFC72"},"outputs":[],"source":["try:\n","    n = int('a')\n","except ValueError:\n","    print('a is not convertable')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8527485B28144533B624F28470118BDC"},"outputs":[],"source":["try:\n","    n = int('a')\n","except ValueError as e:\n","    print(e)"]},{"cell_type":"markdown","metadata":{"id":"0F14C95F8F2642779ED0ABA2DA1FA5F4"},"source":["## except 捕捉顺序"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"0603C65BBBBA4E4C87551895903B769E"},"outputs":[],"source":["try:\n","    n = int('a')\n","except ValueError:\n","    print('a is not convertable')\n","except Exception:\n","    print('something went wrong')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D8F337378D984AEBAA0D81CF5733E9E9"},"outputs":[],"source":["try:\n","    n = int('a')\n","except Exception:\n","    print('something went wrong')\n","except ValueError:\n","    print('a is not convertable')"]},{"cell_type":"markdown","metadata":{"id":"201B8ECB6D5A421A95A4EADDD34991C8"},"source":["## 其他常见错误"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"FBB427EAD318449AA00E5E85BF66A8F5"},"outputs":[],"source":["lst = [0, 1, 2]\n","lst[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A7414815EA7E40EF86DEE6457CFF86E1"},"outputs":[],"source":["try:\n","    n = int('a')\n","except IndexError:\n","    print('Index!')\n","except ValueError:\n","    print('a is not convertable')\n","except Exception:\n","    print('something went wrong')"]},{"cell_type":"markdown","metadata":{"id":"EFAE6A3322D9475A9E3ED7D713CB02CD"},"source":["# 5. 自定义异常"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"CAC7BAC63F294D6A99C5531DABEBEA3F"},"source":["## 自定义异常"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"AB0B90AD78B7467F83D4A7D964959B61"},"outputs":[],"source":["class NegativeAge(Exception): pass"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"226A59316B314DB09F7DC12796DB93DF"},"outputs":[],"source":["# 用来获取用户输入（年龄）的函数\n","\n","def get_age():\n","    age = int(user_input)\n","    \n","    if age < 0: raise NegativeAge()\n","    return age"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0A210083441C413694E793759E130750"},"outputs":[],"source":["def get_information():\n","    try:\n","        age = get_age()\n","    except NegativeAge:\n","        print('年龄不能为负数')"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"46C013E314644D2583FFB549542A8ECB"},"outputs":[],"source":["get_information()"]},{"cell_type":"markdown","metadata":{"id":"F54C3E5101FD49AD8C0AEFF737C4AE39"},"source":["## 保证不崩溃，但非常糟糕"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"EF6E9452C01946CEB36E2F4498F34E43"},"outputs":[],"source":["def get_information():\n","    try:\n","        age = get_age()\n","    except NegativeAge:\n","        print('年龄不能为负数')\n","    except Exception:\n","        print('错误')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"163307F265E0445584C1B96A50561AE0"},"outputs":[],"source":["get_information()"]},{"cell_type":"markdown","metadata":{"id":"46D6DA15F2E2425F82548F811DEF97DE"},"source":["## 继续向上抛出"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"A77D514F920C4529B24BABE81C145575"},"outputs":[],"source":["class AgeError(Exception):\n","    def __init__(self, detail, user_input):\n","        self.detail = detail\n","        self.user_input = user_input"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D601E0ED6AE44C3FB5DAA4AADF2218EB"},"outputs":[],"source":["def get_information():\n","    try:\n","        age = get_age()\n","#     except NegativeAge:\n","#         print('年龄不能为负数')\n","    except Exception as e:\n","        raise AgeError(e, user_input)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"5D8B8BB491754EDC83534383E0BCBD38"},"outputs":[],"source":["get_information()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1248E1DEA554492CAB164A6F995C9D78"},"outputs":[],"source":["try:\n","    get_information()\n","except AgeError as e:\n","    print(e)\n","    print(str(e.user_input))\n","    # 保存 / 上传错误\n","    raise"]},{"cell_type":"markdown","metadata":{"id":"FB700922863945F5BA2BABC9B7C043DE"},"source":["## 习题"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"E4495EDF2ADE44878FBD099E625C94CC","mdEditEnable":false},"source":["# 1. 强制回文\n","\n","完成函数 `force_palindrome(num)`，接收整数类型参数，使函数返回字符串，要求将整数的各位数从小到大排列，再从大到小排列。\n","\n","例如：输入 2028，返回 \"0228220\"。"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":16,"metadata":{"id":"6F389659AFB643C59C2B63B1BD96F8A5","collapsed":false,"scrolled":false},"outputs":[],"source":["def force_palindrome(num):\n","    lst = sorted(str(num))\n","    op=''\n","    for i in lst+lst[::-1][1:]:\n","        op=op+i\n","    return op\n","    \n","    "]},{"cell_type":"code","execution_count":17,"metadata":{"id":"00A8F816A2FA4FCCA0B34E260CA96667","scrolled":false,"collapsed":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"'0235320'"}}],"source":["# 测试：应该返回 \"0235320\"\n","force_palindrome(2035)"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"02F37192B8A2407E8F77EFE99171183A","scrolled":false,"collapsed":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"'11144544111'"}}],"source":["# 测试：应该返回 \"11144544111\"\n","force_palindrome(114514)"]},{"cell_type":"markdown","metadata":{"id":"E99DC01556E241EA907797386DC2257E","mdEditEnable":false},"source":["# 2. 单纯且幼齿\n","\n","完成函数 `pure_and_young(numbers)`，接收列表类型的参数，其中列表的每一项都是整数类型。\n","\n","使函数返回用 `numbers` 中的数字能组成的最小的数字（返回整数类型）。\n","\n","要求 `numbers` 中的每「一种」数字都用且仅用过一次。\n","\n","例如：输入 [1, 8, 8, 5, 3]，返回 1358。\n","\n","输入 [1, 9, 3, 1, 7, 4, 6, 6, 7]，返回 134679。"],"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":36,"metadata":{"id":"C4D6C042F82B4FC1A7CC09388A0F5C0A","scrolled":false,"collapsed":false},"outputs":[],"source":["def pure_and_young(numbers):\n","    return int(''.join(str(i) for i in sorted(set(numbers))))"]},{"metadata":{"id":"5CA8F6F7C99A42B4AD59B4929CB2940F","collapsed":false,"scrolled":false},"cell_type":"code","outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"[1, 3, 5, 8]"}}],"source":["sorted(set([1, 8, 8, 5, 3]))"],"execution_count":32},{"cell_type":"code","execution_count":37,"metadata":{"id":"B60DD33FFF3F40A28A6ADD7FB1258C53","scrolled":false,"collapsed":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"1358"}}],"source":["# 测试：返回 1358\n","pure_and_young([1, 8, 8, 5, 3])"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"5F997AC4C69D453B8799406CB198B29F","scrolled":false,"collapsed":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"134679"}}],"source":["# 测试：返回 134679\n","pure_and_young([1, 9, 3, 1, 7, 4, 6, 6, 7])"]},{"cell_type":"markdown","metadata":{"id":"7248879F976244C48F2B14029C4B64B2","mdEditEnable":false},"source":["# 3. 兄贵数\n","\n","本题需要完成两个函数。\n","\n","完成函数 `factorial(n)`，接收整数类型变量 `n`，返回 `n` 的阶乘。\n","\n","完成函数 `is_aniki(num)`，接收整数类型变量 `num`，判断 `num` 是不是兄贵数，返回 True 或者 False。\n","\n","兄贵数的特点：每位数的阶乘相加等于它本身。\n","\n","例如：1! + 4! + 5! = 1 + 24 + 120 = 145，那么 145 就是兄贵数。"],"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":12,"metadata":{"id":"6378D82C1A1F492490E4368690DCB1EF","scrolled":false,"collapsed":false},"outputs":[],"source":["def factorial(n):\n","    if n == 1:\n","        return 1 \n","    else:\n","        return factorial(n-1) * n\n","    \n","def is_aniki(num):\n","    a = int(str(num)[0])\n","    b = int(str(num)[1])\n","    c = int(str(num)[2])\n","    if factorial(a)+factorial(b)+factorial(c)==num:\n","        return True\n","    else:\n","        return False\n","  "]},{"metadata":{"id":"7A78E81D4832420FA7FEA96AEDC65C8B","collapsed":false,"scrolled":false},"cell_type":"code","outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"6"}}],"source":["factorial(3)"],"execution_count":15},{"cell_type":"code","execution_count":16,"metadata":{"id":"2A61EC39C6164B8D855E5094B6B27ADA","scrolled":false,"collapsed":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"True"}}],"source":["# 测试：返回 True\n","is_aniki(145)"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"B7414E48DAF049C99B0840A3CB068B12","scrolled":false,"collapsed":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"False"}}],"source":["# 测试：返回 False\n","is_aniki(12332423)"]},{"cell_type":"markdown","metadata":{"id":"315EAF7FA11148A08325222AADC5C47E","mdEditEnable":false},"source":["## 参考答案\n","\n","### 1"],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"6A9F87249C004F08943C3626A6C0F279"},"outputs":[],"source":["def force_palindrome(num):\n","    sorted_n = sorted(str(num))\n","    concat = sorted_n + sorted_n[-2::-1]\n","    return ''.join(concat)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7618BD064E974BA6B159326A41FD7BAE","scrolled":false},"outputs":[],"source":["def force_palindrome(n):\n","    \n","    return ''.join(sorted(str(n)) + sorted(str(n))[-2::-1])"]},{"cell_type":"markdown","metadata":{"id":"585219DB75ED4258BFC773C7D01D6824"},"source":["---\n","### 2"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"CFF5F6C6A78E44958806559990DD63E9","scrolled":false},"outputs":[],"source":["def pure_and_young(numbers):\n","    \n","    uniques = []\n","    for i in numbers:\n","        if i not in uniques:\n","            uniques.append(i)\n","    \n","    young = ''\n","    for i in sorted(uniques):\n","        young += str(i)\n","        \n","    return int(young)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C4D6C042F82B4FC1A7CC09388A0F5C0A","scrolled":false},"outputs":[],"source":["def pure_and_young(numbers):\n","    return int(''.join(str(i) for i in sorted(set(numbers))))"]},{"cell_type":"markdown","metadata":{"id":"7BBBE6FF53624E538BD5F15A114AAC44"},"source":["---\n","### 3"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"6378D82C1A1F492490E4368690DCB1EF","scrolled":false},"outputs":[],"source":["def factorial(n):\n","    if n == 1:\n","        return 1 \n","    else:\n","        return factorial(n-1) * n\n","    \n","def is_aniki(num):\n","    a = int(str(num)[0])\n","    b = int(str(num)[1])\n","    c = int(str(num)[2])\n","    if factorial(a)+factorial(b)+factorial(c)==num:\n","        return True\n","    else:\n","        return False\n","  "]}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python","nbconvert_exporter":"python","file_extension":".py","version":"3.5.2","pygments_lexer":"ipython3"}},"nbformat":4,"nbformat_minor":2}
}
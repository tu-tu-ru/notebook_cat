{"cells":[{"cell_type":"markdown","metadata":{"id":"BC9CC51879644EE68A92436148FD4E14","mdEditEnable":false},"source":["## 教案"],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"775B64D76AC440DD86A1B65586F80728"},"source":["# 1. 类的继承"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"1F92A32152B44E41A133EF1605542F80"},"source":["### 自定义类"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":1,"metadata":{"id":"C1051AA10F0B4CF989F97BD1F343AF44","collapsed":false,"scrolled":false},"outputs":[],"source":["class MyClass():\n","    pass"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"41A0AB735E90433B90DCEE4939BC8325","collapsed":false,"scrolled":false},"outputs":[],"source":["my_object = MyClass()"]},{"cell_type":"markdown","metadata":{"id":"626218F3DBFE4FA0804F97ED71DE0D6B","mdEditEnable":false},"source":["### 万物皆对象，万物基于 object"],"execution_count":null},{"cell_type":"code","execution_count":3,"metadata":{"id":"C8DF3D0E7804444AAB963C66C8426705","collapsed":false,"scrolled":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"True"}}],"source":["isinstance(my_object, object)"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"5D612EF9F1EC4C76A2888E4DF3FF12C3","collapsed":false,"scrolled":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"True"}}],"source":["issubclass(MyClass, object)"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"F57E3C7188754FDB868AF82787F1A473","collapsed":false,"scrolled":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"True"}}],"source":["issubclass(int, object)"]},{"cell_type":"markdown","metadata":{"id":"B7B015E8647F43898344F3339C5C4CDD","mdEditEnable":false},"source":["###  显式继承 object"],"execution_count":null},{"cell_type":"code","execution_count":6,"metadata":{"id":"0C3B9838D804477C83E30B1EA78253E7","collapsed":false,"scrolled":false},"outputs":[],"source":["class MyExplicitClass(object): pass"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"31D4447559A144468C730E9D5DEF9710","collapsed":false,"scrolled":false},"outputs":[],"source":["my_explicit_object = MyExplicitClass()"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"A00F4B4CE3EC4C21B559A723679FAB8B","collapsed":false,"scrolled":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"True"}}],"source":["issubclass(MyExplicitClass, object)"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"30F13822E4B9480D88FC7E7F25159A29","collapsed":false,"scrolled":false},"outputs":[],"source":["my = object()"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"96485D41FC774B2E999E17748345DC65","collapsed":false,"scrolled":false},"outputs":[{"output_type":"stream","text":"True\n","name":"stdout"}],"source":["print(bool(my))"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"EB0919EF325C4DD788D01C4D7A651BC6","collapsed":false,"scrolled":false},"outputs":[],"source":["class MyClass():\n","    pass"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"97D2C853078C4B398B6F88E9A9DBDA31","collapsed":false,"scrolled":false},"outputs":[],"source":["my_o = MyClass()\n","my_p = MyClass()"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"946B780EABF4472A91954D020F0E4478","collapsed":false,"scrolled":false},"outputs":[{"output_type":"error","ename":"TypeError","evalue":"unsupported operand type(s) for +: 'MyClass' and 'MyClass'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-43886e6c0c37>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmy_o\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mmy_p\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for +: 'MyClass' and 'MyClass'"]}],"source":["my_o + my_p"]},{"cell_type":"markdown","metadata":{"id":"23B5750A7FD149739D573ECF8591128B","mdEditEnable":false},"source":["---\n","\n","# 2. 类的设计"],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"159689E8246245A989F28BF214E2E2BB","mdEditEnable":false},"source":["### 方法 & 函数：为什么要加 self"],"execution_count":null},{"cell_type":"code","execution_count":14,"metadata":{"id":"FDBD6092DB83410DB715F32C7CB7D4F7","collapsed":false,"scrolled":false},"outputs":[],"source":["class MyClass:\n","    def __init__(self, value):\n","        self.value = value"]},{"cell_type":"code","execution_count":15,"metadata":{"scrolled":false,"id":"A04C87A483E84DC2B06905665F2C0334","collapsed":false},"outputs":[],"source":["my_obj = MyClass(1)"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"A1C382F2561C4EF38E6EA3C7D5309156","collapsed":false,"scrolled":false},"outputs":[],"source":["class MyClass:\n","    def __init__(self, value):\n","        print(self)\n","        self.value = value\n","        \n","    def express_myself(self):\n","        print(self)\n","        print('I am a demo class object.')"]},{"cell_type":"code","execution_count":17,"metadata":{"scrolled":false,"id":"2A1FB0D6B39D4B47B5A19AD305825FD0","collapsed":false},"outputs":[{"output_type":"stream","text":"<__main__.MyClass object at 0x7fa94d549128>\n","name":"stdout"}],"source":["my_obj = MyClass(1)"]},{"cell_type":"code","execution_count":18,"metadata":{"scrolled":false,"id":"866C8240F28B4DC18B5A2FC497F96348","collapsed":false},"outputs":[{"output_type":"stream","text":"<__main__.MyClass object at 0x7fa94d549128>\nI am a demo class object.\n","name":"stdout"}],"source":["my_obj.express_myself()"]},{"cell_type":"markdown","metadata":{"id":"0075C11A08E1424C8FF449F74852AFA7","mdEditEnable":false},"source":["### 设计类的结构"],"execution_count":null},{"cell_type":"code","execution_count":19,"metadata":{"id":"69968621DC3A42EFACEE4AB60AA1CFE3","collapsed":false,"scrolled":false},"outputs":[],"source":["class Creature: pass"]},{"cell_type":"code","execution_count":20,"metadata":{"scrolled":false,"id":"7BCA38D680354D30B31F3B9305D642F6","collapsed":false},"outputs":[],"source":["class Person(Creature):\n","    def __init__(self, name):\n","        self.name = name"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"00F9521A96074F6F8F7547A8CCAC1B70","collapsed":false,"scrolled":false},"outputs":[],"source":["class Citizen(Person):\n","    def __init__(self, citizenship, name):\n","        self.citizenship = citizenship\n","        super().__init__(name)"]},{"cell_type":"markdown","metadata":{"id":"DF46E01F927F46B691DCDE72394DFCD9","mdEditEnable":false},"source":["### 限制对象添加成员"],"execution_count":null},{"cell_type":"code","execution_count":22,"metadata":{"id":"25766BB5F141477080718F042BE48299","collapsed":false,"scrolled":false},"outputs":[],"source":["me = Citizen('Chinese', 'iMoe')"]},{"cell_type":"code","execution_count":23,"metadata":{"scrolled":false,"id":"BE557B445AA6477D86BA8574942C28E6","collapsed":false},"outputs":[{"output_type":"execute_result","metadata":{},"data":{"text/plain":"'iMoe'"}}],"source":["me.name"]},{"cell_type":"code","execution_count":24,"metadata":{"scrolled":false,"id":"8025A08D4D8B4A6E8F9E891E3023423C","collapsed":false},"outputs":[],"source":["class ConstrainedClass:\n","    __slots__ = ('value',)"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"7984972BC7BB4D24BC462541E81B690C","collapsed":false,"scrolled":false},"outputs":[],"source":["constrained_obj = ConstrainedClass()"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"599D4B4C8E1644F69F377D175D1DFB60","collapsed":false,"scrolled":false},"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"'ConstrainedClass' object has no attribute 'val'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-27-0e5cb8d14d2c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mconstrained_obj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mval\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'ConstrainedClass' object has no attribute 'val'"]}],"source":["constrained_obj.val = 1"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"E70F62CD36AC4F328D798E305DD097F2","collapsed":false,"scrolled":false},"outputs":[],"source":["constrained_obj.value = 1"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"C2471102788F45F1889AC4BD9DAF24C6","collapsed":false,"scrolled":false},"outputs":[],"source":["constrained_obj = 1"]},{"cell_type":"markdown","metadata":{"id":"A883B25F42A24F9381496E6B91341311"},"source":["### 继承与 __slots__"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"A86C7A68F4124B3B8D1FDD7CD11C1B28"},"outputs":[],"source":["class Citizen(Person):\n","    __slots__ = 'citizenship'\n","    def __init__(self, citizenship, name):\n","        self.citizenship = citizenship\n","        super().__init__(name)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"109CC893BF674422ADCA2643D3FBE854"},"outputs":[],"source":["me = Citizen('Chinese', 'iMoe')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"60B27F2CB42C48559EF4D450B75DF982"},"outputs":[],"source":["me.value = 1"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"7A479C93EB5B4DC4A8E3F7CCBD0268C5"},"outputs":[],"source":["me.value"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"5FDD3C8E6A704DED805F1AF3331CD699"},"outputs":[],"source":["class Creature:\n","    __slots__ = ()"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"D512350E7BCC4BFE83D1F3D9697B96F6"},"outputs":[],"source":["class Person(Creature):\n","    __slots__ = 'name',\n","    def __init__(self, name):\n","        self.name = name"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2B712D9FEB7542638AF910839B079633"},"outputs":[],"source":["class Citizen(Person):\n","    __slots__ = 'citizenship',\n","    def __init__(self, citizenship, name):\n","        self.citizenship = citizenship\n","        super().__init__(name)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FDE6DF5F860D4FC083A847F4E0E4AEFF"},"outputs":[],"source":["me = Citizen('Chinese', 'iMoe')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"93DC12FD11D940798CD07FF4CE2FB2BF"},"outputs":[],"source":["me.value = 1"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"02221429D1F04DB081B7781DCFED24EF"},"outputs":[],"source":["me.value"]},{"cell_type":"markdown","metadata":{"id":"F5CB85F163B04AE9849BBAF50300BB69"},"source":["---\n","\n","# 3. 继承与多态"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"2F22444AB5934B5D8951E70D7841A2AF"},"source":["### 继承方法"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"736D518B9F714AB882A732D1BBBE169C"},"outputs":[],"source":["class Creature:\n","    __slots__ = ()"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"BD9C86E3EE764413AC7BFABC3372DD8D"},"outputs":[],"source":["class Person(Creature):\n","    __slots__ = 'name',\n","    def __init__(self, name):\n","        self.name = name\n","        \n","    def expression(self):\n","        return 'My name is {}.'.format(self.name)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DA2B724EAF41493383E91AEE3F78E53D"},"outputs":[],"source":["class Citizen(Person):\n","    __slots__ = 'citizenship',\n","    def __init__(self, name, citizenship='None'):\n","        self.citizenship = citizenship\n","        super().__init__(name)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6949D4044C5C49F586183691369523A6"},"outputs":[],"source":["student1 = Person('Li Hua')"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"998C2A1466184560828B8F55F24A120E"},"outputs":[],"source":["student1.expression()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3BC1FF9E7DC143CA8487A910F8F326D8"},"outputs":[],"source":["student2 = Citizen('Wu Jing')"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"1A2A7F2871124315819A8A8BB5F9A362"},"outputs":[],"source":["student2.expression()"]},{"cell_type":"markdown","metadata":{"id":"66C2495DABB546E481B8F84BD4781758"},"source":["### 重写（覆写）方法"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"D8FF8BD101DB438E8BA89D3A5A0EDD2C"},"outputs":[],"source":["class Citizen(Person):\n","    __slots__ = 'citizenship',\n","    def __init__(self, name, citizenship='None'):\n","        self.citizenship = citizenship\n","        super().__init__(name)\n","        \n","    def expression(self):\n","        return \"My name is {}, I'm {}!\".format(self.name, self.citizenship)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BB3EAF6BDD924A929B4EB102FCF2D8CC"},"outputs":[],"source":["class Actor(Citizen):\n","    pass"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"92199024F99641F8847DAFACC938CB11"},"outputs":[],"source":["guest = Actor(name='WuJing', citizenship='Chinese')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"E9F89213C9184F5D8F6089195AC2B753"},"outputs":[],"source":["guest.expression()"]},{"cell_type":"markdown","metadata":{"id":"39213C372BE7430D8599C14C34BA2D7F"},"source":["---\n","\n","# 4. 多重继承"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"C1AA1239536E4245A5B7F2C8C75A3466"},"outputs":[],"source":["class Fightable:\n","    def __init__(self, style):\n","        self.fight_style = style\n","        \n","    def fight(self):\n","        return 'Fight with {} style.'.format(self.fight_style)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4BFA1C4566A64E76828F6F9AE196C525"},"outputs":[],"source":["class Soldier(Citizen): pass"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8A4F0749D88C4543871FB18F8DFA27CF"},"outputs":[],"source":["ordinary_soldier = Soldier('Shi Tailong', 'American')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"720DF16F86FC4A0380169040F93ECE5F"},"outputs":[],"source":["ordinary_soldier.expression()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C4EE4440B3244881BA75DB1731141D3E"},"outputs":[],"source":["class Soldier(Citizen, Fightable): pass"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"54A892BCCF39439E8532BA3E0735DD88"},"outputs":[],"source":["disordinary_soldier = Soldier('Leng Feng', 'Chinese')"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"98557C1E3C484676A8E0C13A0FB2D4DC"},"outputs":[],"source":["disordinary_soldier.expression()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EF57CC4A5AB84F7E8F34C060A5574E9D"},"outputs":[],"source":["disordinary_soldier.fight_style = \"Chinese Kongfu\""]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"3448C7E506CB40B789244EA8B38C4A31"},"outputs":[],"source":["disordinary_soldier.fight()"]},{"cell_type":"markdown","metadata":{"id":"51BFD74A323A44CB8D288D93190DAA20"},"source":["---\n","\n","# 5. 枚举"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"BAF70875465E43598D8E4E1553DB72C9"},"outputs":[],"source":["from enum import Enum"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2028363A6BF8457FB8445E37C1814358"},"outputs":[],"source":["class FightStyle(Enum):\n","    ChineseKongfu = 'Kongfu, Honour & Technology'\n","    WesternTheory = 'Machine Gun'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"79A3EBCDB4CB4DA0910E88ABEFC594B9"},"outputs":[],"source":["style = FightStyle.ChineseKongfu"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CCCBADFDEA9B47A084C20437DA20FCB0"},"outputs":[],"source":["list(FightStyle)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3422A890B7E2496187DC461D7C64F3A2"},"outputs":[],"source":["class Fightable:\n","    def __init__(self, style):\n","        self.fight_style = style\n","        \n","    def fight(self):\n","        return 'Fight with {}.'.format(self.fight_style.value)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F568E1228D794690BAA9B2E50E16CF5B"},"outputs":[],"source":["class Soldier(Citizen, Fightable): pass"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"72045F1B80C5430B8E7A16153E8B7AA0"},"outputs":[],"source":["disordinary_soldier = Soldier('Leng Feng', 'Chinese')"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"BA83B319ECF646A0B75FEBE987D3C5FF"},"outputs":[],"source":["disordinary_soldier.expression()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D11B00C8E86A46F3B97E9E10AB806BEF"},"outputs":[],"source":["disordinary_soldier.fight_style = FightStyle.ChineseKongfu"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"C733C507F2D543828DDD535E330EAA94"},"outputs":[],"source":["disordinary_soldier.fight()"]},{"cell_type":"markdown","metadata":{"id":"754E4CA0F53340378994A2DF94DD9764"},"source":["---\n","\n","# 6 重写（Override）"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"2472B911A204496D8F63F655AEF9CE20"},"source":["### 重写 `__str__`"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"82E71A465FE148A0B7EF32BAAE713C2B"},"outputs":[],"source":["print(disordinary_soldier)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F7F8D9951CBD4654969DA2B9FAF71CDF"},"outputs":[],"source":["class Soldier(Citizen, Fightable):\n","    def __str__(self):\n","        return self.expression()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A03C802A6C67489D8649F44E4DBA1580"},"outputs":[],"source":["disordinary_soldier = Soldier('Leng Feng', 'Chinese')"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"43FFC3A367E24BFCAB31933AF2767B95"},"outputs":[],"source":["print(disordinary_soldier)"]},{"cell_type":"markdown","metadata":{"id":"EA65F48CA3EC45BDA912288C09F357B9"},"source":["### 重写 `__neg__`"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"1A37F85A8A1249208A7A2AD32FD9A125"},"outputs":[],"source":["class Soldier(Citizen, Fightable):\n","    \n","    # __neg__\n","    \n","    def __str__(self):\n","        return self.expression()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5A06AE4F4DB84E73BD1E8D723C8BD869"},"outputs":[],"source":["disordinary_soldier = Soldier('Leng Feng', 'Chinese')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CC5CED3F1D9D484E82632D12CBB24EA4"},"outputs":[],"source":["disordinary_soldier.fight_style = FightStyle.ChineseKongfu"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"C4D4DB32992243BF8F680D30BB8AE362"},"outputs":[],"source":["print(- disordinary_soldier)"]},{"cell_type":"markdown","metadata":{"id":"DCD2CD14704E4F5984717B54B4BAC004"},"source":["### 重写 `__lt__` & `__gt__`"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"566B29FDE03C47B091D3EC4A9FACB2DD"},"outputs":[],"source":["class Soldier(Citizen, Fightable):\n","    \n","    # __lt__\n","    \n","    \n","    # __gt__\n","    \n","    def __str__(self):\n","        return self.expression()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1D6E61B2081147A5A295828DDAFD04CC"},"outputs":[],"source":["disordinary_soldier = Soldier('Leng Feng', 'Chinese')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"388692C0D25A4E5E85B43C81097DB63C"},"outputs":[],"source":["disordinary_soldier.fight_style = FightStyle.ChineseKongfu"]},{"cell_type":"markdown","metadata":{"id":"453FEECEC6C74A618B828C470F3C97CE"},"source":["---\n","\n","# 7. 生成器"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"081ECCB11DD7414F843ABF3B95DEB991"},"source":["### 可迭代（Iterable）"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"F2F4430D19CD4F3789084C61C8049F5F"},"outputs":[],"source":["lst = [0, 1, 2, 3]"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":false,"id":"D38929F86DAD48118A11796164078D91"},"outputs":[],"source":["isinstance([1,2], Iterable)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"8ED2736492F74A27964516665BB374D0"},"outputs":[],"source":["for item in lst:\n","    print(item)"]},{"cell_type":"markdown","metadata":{"id":"743A6BE118ED4295824EC00F2B8ED153"},"source":["### 迭代器（Iterator）"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"382F5AF7C9674275B75AD496AB41A6E9"},"outputs":[],"source":["my_iter = iter(lst)\n","isinstance(my_iter, Iterable)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3557EB0E46DD4F718B4F56A667BF047F"},"outputs":[],"source":["next(my_iter)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"4AF75BB9F3AF4A358EFA9C21D007EFB3"},"outputs":[],"source":["next(my_iter)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"910E5376704B433097BE260DDB9756DF"},"outputs":[],"source":["next(my_iter)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"951A3096F0F243698E9DB732B153410D"},"outputs":[],"source":["next(my_iter)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"C7E06A9C2035407E8446BC3AAC997292"},"outputs":[],"source":["next(my_iter)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"D7F0AA34F7394564825A0548B73D351A"},"outputs":[],"source":["try:\n","    next(my_iter)\n","except StopIteration:\n","    # 处理\n","    pass"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6E68634986D341CC851660F0A062237C"},"outputs":[],"source":["for item in my_iter:\n","    print(item)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"403481911475481483A62EAD0AFC8A7D"},"outputs":[],"source":["my_iter = iter(lst)"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"33D515DD16084E74862F1A13D6CA53C1"},"outputs":[],"source":["for item in my_iter:\n","    print(item)"]},{"cell_type":"markdown","metadata":{"id":"A89DF177AACD45BE8CEF3A7A22897075"},"source":["### 生成器"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"C9995ED3FB264758982EACD00237B7B4"},"outputs":[],"source":["def fib():\n","    a, b = 0, 1\n","    while True:\n","        yield b\n","        a, b = b, a + b"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C8DCB6BC6B1D44BBB4DFF32F9217A2D4"},"outputs":[],"source":["f = fib()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"918025EA236E49E3B09B418ED45134A7"},"outputs":[],"source":["next(f)"]},{"cell_type":"markdown","metadata":{"id":"92DFF01785704A9CA4AC00B13F9A9ACC"},"source":["---\n","\n","# 8. 二叉树"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"AD69082AF146488F9D6B12D97BFB3564"},"source":["### 节点"],"outputs":[],"execution_count":null},{"cell_type":"code","execution_count":null,"metadata":{"id":"5D88C58FEB9149FF9244B61BEE697922"},"outputs":[],"source":["class Node:\n","    def __init__(self, value):\n","        # nodes and values\n","        "]},{"cell_type":"markdown","metadata":{"id":"819E2C039CD44F5B8C87FC4D0A82D720"},"source":["## 作业"],"outputs":[],"execution_count":null},{"cell_type":"markdown","metadata":{"id":"1B2D845FEC3F45B784A79CB4EDF1306F","mdEditEnable":false},"source":["此处附上 Github 仓库链接：\n",""],"execution_count":null}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python","nbconvert_exporter":"python","file_extension":".py","version":"3.5.2","pygments_lexer":"ipython3"}},"nbformat":4,"nbformat_minor":2}